// Generated by CoffeeScript 1.6.3
(function() {
  "This is a hack to avoid having to manually pre-compile the Handlebars templates.";
  var name, templateStr, _ref,
    _this = this;

  window.buildTemplates = function() {
    var entireMemoryWrapperHandlebars, handlebarsElems, memoryBuilderHandlebars;
    memoryBuilderHandlebars = "<div id=\"memory_builder\">\n{{#if memoryUrl}}\n  <h5>Keep this memory forever: <a href=\"{{memoryUrl}}\" target=\"_blank\">{{memoryUrl}}</a></h5>\n{{/if}}\n{{#each panels}}<div class=\"panel_wrapper\" {{panelIndex}}\">\n  <div class=\"panel\">  {{!-- {{Comment: the width here needs to match the width in the CSS for .panel_wrapper! }} --}}\n    <div class=\"vid_wrapper\"><video autoplay=\"\" loop=\"\" class=\"effect {{effect}}\" width=200px><source src=\"{{video.videoUrl}}\" type=\"video/webm\"></video></div>\n    <div class=\"annotation\">\n      <span class=\"memory_message\">{{video.messageBefore}}</span>\n      <span class=\"memory_message\">{{video.messageCurrent}}</span>\n    </div>\n  </div>\n</div>{{/each}}";
    entireMemoryWrapperHandlebars = "<div id=\"build_memory\">\n  {{#if standalone}}\n\n  {{else}}\n  <div><button id=\"make_memory_button\" style=\"visibility:hidden\">Build!</button></div>\n  {{/if}}\n  <div id=\"memory_builder_container\"></div>\n</div>";
    handlebarsElems = {
      "memoryBuilder": memoryBuilderHandlebars,
      "memoryWrapper": entireMemoryWrapperHandlebars
    };
    return handlebarsElems;
  };

  window.Templates = {};

  _ref = window.buildTemplates();
  for (name in _ref) {
    templateStr = _ref[name];
    window.Templates[name] = Handlebars.compile(templateStr);
  }

}).call(this);
